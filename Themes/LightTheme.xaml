<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- Light Theme Colors -->
    <Color x:Key="BackgroundColor">#FFFFFF</Color>
    <Color x:Key="SurfaceColor">#F9FAFB</Color>
    <Color x:Key="HeaderBackgroundColor">#1F2937</Color> <!-- Dark blue-gray for header/footer -->
    <Color x:Key="CardBackgroundColor">#FFFFFF</Color>
    <Color x:Key="PillBackgroundColor">#E5E7EB</Color>
    
    <Color x:Key="PrimaryTextColor">#111827</Color>
    <Color x:Key="SecondaryTextColor">#6B7280</Color>
    <Color x:Key="DisabledTextColor">#70757D</Color>
    
    <Color x:Key="BorderColor">#D1D5DB</Color>
    <Color x:Key="DividerColor">#E5E7EB</Color>
    <Color x:Key="FocusBorderColor">#2563EB</Color>
    
    <Color x:Key="AccentColor">#2563EB</Color>
    <Color x:Key="AccentHoverColor">#1D4ED8</Color>
    <Color x:Key="AccentPressedColor">#1E40AF</Color>
    
    <!-- Additional DataGrid Colors -->
    <Color x:Key="AlternatingRowColor">#F5F5F5</Color>
    
    <!-- Brushes -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
    <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
    <SolidColorBrush x:Key="HeaderBackgroundBrush" Color="{StaticResource HeaderBackgroundColor}"/>
    <SolidColorBrush x:Key="CardBackgroundBrush" Color="{StaticResource CardBackgroundColor}"/>
    <SolidColorBrush x:Key="PillBackgroundBrush" Color="{StaticResource PillBackgroundColor}"/>
    
    <SolidColorBrush x:Key="PrimaryTextBrush" Color="{StaticResource PrimaryTextColor}"/>
    <SolidColorBrush x:Key="SecondaryTextBrush" Color="{StaticResource SecondaryTextColor}"/>
    <SolidColorBrush x:Key="DisabledTextBrush" Color="{StaticResource DisabledTextColor}"/>
    
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>
    <SolidColorBrush x:Key="DividerBrush" Color="{StaticResource DividerColor}"/>
    <SolidColorBrush x:Key="FocusBorderBrush" Color="{StaticResource FocusBorderColor}"/>
    
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
    <SolidColorBrush x:Key="AccentHoverBrush" Color="{StaticResource AccentHoverColor}"/>
    <SolidColorBrush x:Key="AccentPressedBrush" Color="{StaticResource AccentPressedColor}"/>

    <!-- Button Text Brush - use dark text for light theme buttons -->
    <SolidColorBrush x:Key="ButtonTextBrush" Color="#1F2937"/>
    
    <!-- Button Background Colors for Light Theme - Lighter/pastel versions for dark text -->
    <!-- Primary Button - Light Blue -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="#60A5FA"/>
    <SolidColorBrush x:Key="PrimaryHoverBrush" Color="#3B82F6"/>
    <SolidColorBrush x:Key="PrimaryPressedBrush" Color="#2563EB"/>
    
    <!-- Success Button - Light Green -->
    <SolidColorBrush x:Key="SuccessBrush" Color="#34D399"/>
    <SolidColorBrush x:Key="SuccessHoverBrush" Color="#10B981"/>
    <SolidColorBrush x:Key="SuccessPressedBrush" Color="#059669"/>
    
    <!-- Warning Button - Light Orange -->
    <SolidColorBrush x:Key="WarningBrush" Color="#FBBF24"/>
    <SolidColorBrush x:Key="WarningHoverBrush" Color="#F59E0B"/>
    <SolidColorBrush x:Key="WarningPressedBrush" Color="#D97706"/>
    
    <!-- Danger Button - Light Red/Pink -->
    <SolidColorBrush x:Key="DangerBrush" Color="#F87171"/>
    <SolidColorBrush x:Key="DangerHoverBrush" Color="#EF4444"/>
    <SolidColorBrush x:Key="DangerPressedBrush" Color="#DC2626"/>
    
    <!-- Secondary Button - Light Gray -->
    <SolidColorBrush x:Key="SecondaryBrush" Color="#9CA3AF"/>
    <SolidColorBrush x:Key="SecondaryHoverBrush" Color="#6B7280"/>
    <SolidColorBrush x:Key="SecondaryPressedBrush" Color="#4B5563"/>
    
    <!-- Info Button - Light Purple -->
    <SolidColorBrush x:Key="InfoBrush" Color="#A78BFA"/>
    <SolidColorBrush x:Key="InfoHoverBrush" Color="#8B5CF6"/>
    <SolidColorBrush x:Key="InfoPressedBrush" Color="#7C3AED"/>
    
    <!-- Additional DataGrid Brushes -->
    <SolidColorBrush x:Key="AlternatingRowBrush" Color="{StaticResource AlternatingRowColor}"/>
    
    <!-- DataGrid Cell Text Style -->
    <Style x:Key="DataGridCellTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
    </Style>

    <!-- DataGrid Style -->
    <Style x:Key="DataGridBase" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="RowBackground" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource AlternatingRowBrush}"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DividerBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DividerBrush}"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        
        <!-- Column Header Style -->
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="{DynamicResource HeaderBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource DividerBrush}"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="Padding" Value="12,8"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Setter.Value>
        </Setter>
        
        <!-- Row Style -->
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="BorderBrush" Value="{DynamicResource DividerBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="ValidationErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PillBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        
        <!-- Cell Style -->
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="12,8"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource FocusBorderBrush}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- GroupBox Style -->
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" 
                               Foreground="{DynamicResource PrimaryTextBrush}"
                               FontWeight="SemiBold"
                               FontSize="14"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,5,0,10"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1,1,1,0" 
                                CornerRadius="4,4,0,0">
                            <ContentPresenter ContentSource="Header" 
                                              Margin="10,5" 
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <Border Grid.Row="1" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1,0,1,1" 
                                CornerRadius="0,0,4,4" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
