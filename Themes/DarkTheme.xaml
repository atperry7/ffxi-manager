<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- Dark Theme Colors -->
    <Color x:Key="BackgroundColor">#0F111A</Color>
    <Color x:Key="SurfaceColor">#1A1D2E</Color>
    <Color x:Key="HeaderBackgroundColor">#1F2430</Color>
    <Color x:Key="CardBackgroundColor">#1A1D2E</Color>
    <Color x:Key="PillBackgroundColor">#263043</Color>
    
    <Color x:Key="PrimaryTextColor">#DDE2E7</Color>
    <Color x:Key="SecondaryTextColor">#9CA3AF</Color>
    <Color x:Key="DisabledTextColor">#90959F</Color>
    
    <Color x:Key="BorderColor">#374151</Color>
    <Color x:Key="DividerColor">#263043</Color>
    <Color x:Key="FocusBorderColor">#3DAEE9</Color>
    
    <Color x:Key="AccentColor">#3DAEE9</Color>
    <Color x:Key="AccentHoverColor">#2B96CD</Color>
    <Color x:Key="AccentPressedColor">#2884B4</Color>
    
    <!-- Additional DataGrid Colors -->
    <Color x:Key="AlternatingRowColor">#212542</Color>
    
    <!-- Brushes -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
    <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
    <SolidColorBrush x:Key="HeaderBackgroundBrush" Color="{StaticResource HeaderBackgroundColor}"/>
    <SolidColorBrush x:Key="CardBackgroundBrush" Color="{StaticResource CardBackgroundColor}"/>
    <SolidColorBrush x:Key="PillBackgroundBrush" Color="{StaticResource PillBackgroundColor}"/>
    
    <SolidColorBrush x:Key="PrimaryTextBrush" Color="{StaticResource PrimaryTextColor}"/>
    <SolidColorBrush x:Key="SecondaryTextBrush" Color="{StaticResource SecondaryTextColor}"/>
    <SolidColorBrush x:Key="DisabledTextBrush" Color="{StaticResource DisabledTextColor}"/>
    
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>
    <SolidColorBrush x:Key="DividerBrush" Color="{StaticResource DividerColor}"/>
    <SolidColorBrush x:Key="FocusBorderBrush" Color="{StaticResource FocusBorderColor}"/>
    
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
    <SolidColorBrush x:Key="AccentHoverBrush" Color="{StaticResource AccentHoverColor}"/>
    <SolidColorBrush x:Key="AccentPressedBrush" Color="{StaticResource AccentPressedColor}"/>

    <!-- Button Text Brush - white text for dark theme buttons -->
    <SolidColorBrush x:Key="ButtonTextBrush" Color="#FFFFFF"/>
    
    <!-- Button Background Colors for Dark Theme -->
    <!-- Primary Button - Blue -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="#2563EB"/>
    <SolidColorBrush x:Key="PrimaryHoverBrush" Color="#1D4ED8"/>
    <SolidColorBrush x:Key="PrimaryPressedBrush" Color="#1E40AF"/>
    
    <!-- Success Button - Green -->
    <SolidColorBrush x:Key="SuccessBrush" Color="#10B981"/>
    <SolidColorBrush x:Key="SuccessHoverBrush" Color="#059669"/>
    <SolidColorBrush x:Key="SuccessPressedBrush" Color="#047857"/>
    
    <!-- Warning Button - Orange -->
    <SolidColorBrush x:Key="WarningBrush" Color="#F59E0B"/>
    <SolidColorBrush x:Key="WarningHoverBrush" Color="#D97706"/>
    <SolidColorBrush x:Key="WarningPressedBrush" Color="#B45309"/>
    
    <!-- Danger Button - Red -->
    <SolidColorBrush x:Key="DangerBrush" Color="#EF4444"/>
    <SolidColorBrush x:Key="DangerHoverBrush" Color="#DC2626"/>
    <SolidColorBrush x:Key="DangerPressedBrush" Color="#B91C1C"/>
    
    <!-- Secondary Button - Gray -->
    <SolidColorBrush x:Key="SecondaryBrush" Color="#6B7280"/>
    <SolidColorBrush x:Key="SecondaryHoverBrush" Color="#4B5563"/>
    <SolidColorBrush x:Key="SecondaryPressedBrush" Color="#374151"/>
    
    <!-- Info Button - Purple -->
    <SolidColorBrush x:Key="InfoBrush" Color="#8B5CF6"/>
    <SolidColorBrush x:Key="InfoHoverBrush" Color="#7C3AED"/>
    <SolidColorBrush x:Key="InfoPressedBrush" Color="#6D28D9"/>
    
    <!-- Additional DataGrid Brushes -->
    <SolidColorBrush x:Key="AlternatingRowBrush" Color="{StaticResource AlternatingRowColor}"/>
    <SolidColorBrush x:Key="DataGridSelectionBrush" Color="#40008CFF"/> <!-- Semi-transparent blue -->
    <SolidColorBrush x:Key="DataGridSelectionBorderBrush" Color="#008CFF"/> <!-- Bright blue border -->
    
    <!-- DataGrid Cell Text Style -->
    <Style x:Key="DataGridCellTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
    </Style>

    <!-- DataGrid Style -->
    <Style x:Key="DataGridBase" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="RowBackground" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource AlternatingRowBrush}"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DividerBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DividerBrush}"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        
        <!-- Column Header Style -->
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="{DynamicResource HeaderBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource DividerBrush}"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="Padding" Value="12,8"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Setter.Value>
        </Setter>
        
        <!-- Row Style -->
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="BorderBrush" Value="{DynamicResource DividerBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="ValidationErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PillBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DataGridSelectionBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource DataGridSelectionBorderBrush}"/>
                            <Setter Property="BorderThickness" Value="2,0,0,0"/>
                            <!-- Keep text the normal color for better readability -->
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource DataGridSelectionBrush}"/>
                            <Setter Property="Opacity" Value="1.0"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        
        <!-- Cell Style -->
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="12,8"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <!-- Keep text the normal color for better readability -->
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource FocusBorderBrush}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Modern ScrollBar Style -->
    <Style x:Key="ModernScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Width" Value="12"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="12" Background="{TemplateBinding Background}">
                        <Track x:Name="PART_Track" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{DynamicResource SecondaryTextBrush}" 
                                       Opacity="0.2" 
                                       Style="{DynamicResource ScrollBarThumbStyle}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" 
                                              Opacity="0" Focusable="false"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" 
                                              Opacity="0" Focusable="false"/>
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Opacity" Value="0.4"/>
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter TargetName="Thumb" Property="Opacity" Value="0.8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Horizontal ScrollBar Style -->
    <Style x:Key="ModernHorizontalScrollBar" TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ModernScrollBar}">
        <Setter Property="Height" Value="12"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Height="12" Background="{TemplateBinding Background}">
                        <Track x:Name="PART_Track" IsDirectionReversed="false" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{DynamicResource SecondaryTextBrush}" 
                                       Opacity="0.2" 
                                       Style="{DynamicResource ScrollBarThumbHorizontalStyle}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageLeft" Command="ScrollBar.PageRightCommand" 
                                              Opacity="0" Focusable="false"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageRight" Command="ScrollBar.PageLeftCommand" 
                                              Opacity="0" Focusable="false"/>
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Opacity" Value="0.4"/>
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter TargetName="Thumb" Property="Opacity" Value="0.8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar Thumb Style -->
    <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="Rectangle"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Margin="2,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar Thumb Horizontal Style -->
    <Style x:Key="ScrollBarThumbHorizontalStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="Rectangle"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Margin="0,2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Apply modern scrollbar style globally -->
    <Style TargetType="{x:Type ScrollBar}">
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot" Height="12" Background="Transparent">
                                <Track x:Name="PART_Track" IsDirectionReversed="false" Focusable="false">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Background="{DynamicResource SecondaryTextBrush}" 
                                               Opacity="0.2" 
                                               Style="{StaticResource ScrollBarThumbHorizontalStyle}"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageLeft" Command="ScrollBar.PageRightCommand" 
                                                      Opacity="0" Focusable="false"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageRight" Command="ScrollBar.PageLeftCommand" 
                                                      Opacity="0" Focusable="false"/>
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Thumb" Property="Opacity" Value="0.4"/>
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Thumb" Property="Opacity" Value="0.6"/>
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                    <Setter TargetName="Thumb" Property="Opacity" Value="0.8"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="12"/>
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot" Width="12" Background="Transparent">
                                <Track x:Name="PART_Track" IsDirectionReversed="true" Focusable="false">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Background="{DynamicResource SecondaryTextBrush}" 
                                               Opacity="0.2" 
                                               Style="{StaticResource ScrollBarThumbStyle}"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" 
                                                      Opacity="0" Focusable="false"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" 
                                                      Opacity="0" Focusable="false"/>
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Thumb" Property="Opacity" Value="0.4"/>
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Thumb" Property="Opacity" Value="0.6"/>
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                    <Setter TargetName="Thumb" Property="Opacity" Value="0.8"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollViewer Style -->
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Column="0" Grid.Row="0"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}"
                                                Margin="{TemplateBinding Padding}"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1" Grid.Row="0"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Column="0" Grid.Row="1"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Hover Card Border Style - For list items and cards -->
    <Style x:Key="HoverCardBorder" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource CardBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Margin" Value="0,4"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PillBackgroundBrush}"/>
                <Setter Property="TextElement.Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Surface Card Border Style - Uses surface background -->
    <Style x:Key="SurfaceCardBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource HoverCardBorder}">
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
    </Style>
    
    <!-- ToolTip Style -->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="#2A2D3A"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="2" 
                                              BlurRadius="8" 
                                              Opacity="0.3" 
                                              Color="Black"/>
                        </Border.Effect>
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Modern Toggle Switch CheckBox Style -->
    <Style x:Key="ModernToggleSwitch" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8,0,0,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <!-- Toggle Switch Background -->
                        <Border x:Name="SwitchTrack" 
                                Grid.Column="0"
                                Width="44" 
                                Height="24" 
                                Background="{DynamicResource BorderBrush}"
                                CornerRadius="12"
                                BorderThickness="0"
                                VerticalAlignment="Center">
                            <!-- Toggle Switch Thumb -->
                            <Border x:Name="SwitchThumb"
                                    Width="18" 
                                    Height="18" 
                                    Background="{DynamicResource PrimaryTextBrush}"
                                    CornerRadius="9"
                                    HorizontalAlignment="Left"
                                    Margin="3,0,0,0"
                                    VerticalAlignment="Center">
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="ThumbTransform" X="0"/>
                                </Border.RenderTransform>
                            </Border>
                        </Border>
                        
                        <!-- Content (Text) -->
                        <ContentPresenter Grid.Column="1"
                                        x:Name="ContentSite"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        RecognizesAccessKey="True"/>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <!-- Checked State -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="SwitchTrack" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ThumbTransform" 
                                                       Storyboard.TargetProperty="X" 
                                                       To="20" 
                                                       Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ThumbTransform" 
                                                       Storyboard.TargetProperty="X" 
                                                       To="0" 
                                                       Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        
                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="SwitchTrack" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="1" BlurRadius="4" Opacity="0.3" Color="Black"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        
                        <!-- Disabled State -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="SwitchTrack" Property="Background" Value="{DynamicResource PillBackgroundBrush}"/>
                            <Setter TargetName="SwitchThumb" Property="Background" Value="{DynamicResource DisabledTextBrush}"/>
                            <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource DisabledTextBrush}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                        
                        <!-- Disabled + Checked State -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SwitchTrack" Property="Background" Value="{DynamicResource SecondaryTextBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Apply Modern Toggle Switch as default CheckBox style -->
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ModernToggleSwitch}"/>
    
    <!-- Toast Notification Theme Resources -->
    <SolidColorBrush x:Key="ToastBackgroundBrush" Color="#2A2D3A"/>
    <SolidColorBrush x:Key="ToastBorderBrush" Color="{StaticResource BorderColor}"/>
    <SolidColorBrush x:Key="ToastTextBrush" Color="{StaticResource PrimaryTextColor}"/>
    <SolidColorBrush x:Key="ToastCloseButtonBrush" Color="{StaticResource SecondaryTextColor}"/>
    
    <!-- Toast Shadow Effect -->
    <DropShadowEffect x:Key="ToastShadowEffect" 
                      ShadowDepth="4" 
                      BlurRadius="12" 
                      Opacity="0.5" 
                      Color="Black"/>

    <!-- GroupBox Style -->
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" 
                               Foreground="{DynamicResource PrimaryTextBrush}"
                               FontWeight="SemiBold"
                               FontSize="14"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,5,0,10"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1,1,1,0" 
                                CornerRadius="4,4,0,0">
                            <ContentPresenter ContentSource="Header" 
                                              Margin="10,5" 
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <Border Grid.Row="1" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1,0,1,1" 
                                CornerRadius="0,0,4,4" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
