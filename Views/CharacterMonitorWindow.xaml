<Window x:Class="FFXIManager.Views.CharacterMonitorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="FFXI Characters" Height="500" Width="120"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="CanResizeWithGrip"
        MinHeight="300" MinWidth="100"
        Background="Transparent">
    
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
    </Window.Resources>
    
    <!-- Main border with background and opacity -->
    <Border x:Name="MainBorder" 
            Background="{DynamicResource BackgroundBrush}"
            BorderBrush="{DynamicResource BorderBrush}"
            BorderThickness="1"
            CornerRadius="8">
        <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Custom Title Bar with Drag Support -->
        <Border Grid.Row="0" 
                Background="{DynamicResource HeaderBackgroundBrush}" 
                Padding="5"
                CornerRadius="8,8,0,0"
                MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Left Side Controls -->
                <StackPanel Grid.Column="0" Orientation="Vertical" Margin="2,0,0,0">
                    <ToggleButton x:Name="AlwaysOnTopToggle" 
                                  Content="📌" 
                                  ToolTip="Always On Top"
                                  Style="{StaticResource IconToggleButton}"
                                  Width="30" Height="15" 
                                  FontSize="9"
                                  Margin="0,0,0,2"
                                  Checked="AlwaysOnTopToggle_Checked"
                                  Unchecked="AlwaysOnTopToggle_Unchecked"/>
                    
                    <Button Content="🔄"
                            Command="{Binding RefreshCharactersCommand}"
                            Style="{StaticResource InfoIconButton}"
                            Width="30" Height="15"
                            FontSize="8"
                            Margin="0,0,0,2"
                            ToolTip="Refresh"/>
                </StackPanel>
                
                <!-- Title (Center) -->
                <TextBlock Grid.Column="1" 
                           Text="FFXI"
                           FontSize="10" 
                           FontWeight="Bold"
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center"
                           Margin="2,2,2,2"
                           Foreground="{DynamicResource PrimaryTextBrush}"/>

                <!-- Right Side Controls -->
                <StackPanel Grid.Column="2" Orientation="Vertical" Margin="1,0,0,0">
                    <!-- Minimize Button -->
                    <Button Content="—" 
                            Click="MinimizeButton_Click"
                            ToolTip="Minimize"
                            Style="{StaticResource InfoIconButton}"
                            Width="25" Height="15"
                            FontSize="9"
                            Margin="0,0,2,0"/>
                    
                    <!-- Close Button -->
                    <Button Content="✕" 
                            Click="CloseButton_Click"
                            ToolTip="Close"
                            Style="{StaticResource DangerIconButton}"
                            Width="25" Height="10"
                            FontSize="9"/>
                </StackPanel>
            </Grid>
        </Border>
        
        <!-- Compact Character List -->
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <ItemsControl ItemsSource="{Binding Characters}" Margin="3">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" Margin="0,0,0,2" Padding="3" CornerRadius="2">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="{DynamicResource CardBackgroundBrush}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                            <Setter Property="BorderThickness" Value="2"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsResponding}" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource PillBackgroundBrush}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <!-- Character Name - Compact -->
                                <StackPanel Grid.Row="0" Orientation="Horizontal">
                                    <Ellipse Width="6" Height="6" 
                                             Fill="{Binding StatusColor}" 
                                             VerticalAlignment="Center" Margin="0,0,3,0"/>
                                    <TextBlock Text="{Binding DisplayName}" 
                                               FontWeight="Bold" FontSize="10" 
                                               TextTrimming="CharacterEllipsis"
                                               VerticalAlignment="Center"
                                               Foreground="{DynamicResource PrimaryTextBrush}"/>
                                </StackPanel>
                                
                                <!-- Compact Activate Button -->
                                <Button Grid.Row="1" 
                                        Margin="0,2,0,0"
                                        FontSize="9"
                                        Height="18"
                                        Width="80"
                                        HorizontalAlignment="Stretch"
                                        Command="{Binding DataContext.ActivateCharacterCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource ModernButtonBase}">
                                            <Setter Property="Content" Value="🎯 Switch"/>
                                            <Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
                                            <Setter Property="Padding" Value="2"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                                                    <Setter Property="Content" Value="✓ Active"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsResponding}" Value="False">
                                                    <Setter Property="Background" Value="{StaticResource DangerBrush}"/>
                                                    <Setter Property="Content" Value="⚠️ Dead"/>
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource SuccessHoverBrush}"/>
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                        <Condition Binding="{Binding IsActive}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        
        <!-- No Characters Message - Compact -->
        <Border Grid.Row="1" 
                Background="{DynamicResource SurfaceBrush}"
                Margin="5"
                Padding="10">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CharacterCount}" Value="0">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Text="🎮" FontSize="24" HorizontalAlignment="Center" Opacity="0.5"/>
                <TextBlock Text="No characters" 
                           FontSize="10" FontWeight="Bold" 
                           HorizontalAlignment="Center" Margin="0,5,0,2"
                           Foreground="{DynamicResource PrimaryTextBrush}"/>
                <TextBlock Text="Launch FFXI"
                           FontSize="9" Foreground="{DynamicResource SecondaryTextBrush}"
                           HorizontalAlignment="Center" 
                           TextWrapping="Wrap" 
                           TextAlignment="Center"/>
            </StackPanel>
        </Border>
        
        <!-- Hotkey Status Display -->
        <Border Grid.Row="2" 
                x:Name="HotkeyStatusBorder"
                Background="{DynamicResource SurfaceBrush}" 
                Padding="5"
                BorderBrush="{DynamicResource BorderBrush}"
                BorderThickness="0,1,0,0">
            <StackPanel>
                <TextBlock Text="⌨ Hotkeys" 
                           FontSize="9" 
                           FontWeight="Bold"
                           Foreground="{DynamicResource PrimaryTextBrush}"
                           Margin="0,0,0,2"/>
                
                <TextBlock x:Name="HotkeyStatusText"
                           Text="No hotkeys registered"
                           FontSize="8"
                           Foreground="{DynamicResource SecondaryTextBrush}"
                           TextWrapping="Wrap"/>
                <TextBlock x:Name="LastHotkeyText"
                           Text=""
                           FontSize="8"
                           Foreground="{DynamicResource AccentBrush}"
                           Margin="0,2,0,0"
                           Visibility="Collapsed"/>
            </StackPanel>
        </Border>
        
        <!-- Opacity Slider -->
        <Border Grid.Row="3" 
                Background="{DynamicResource SurfaceBrush}" 
                Padding="5"
                CornerRadius="0,0,8,8">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Grid.Column="0" 
                           Text="👁" 
                           FontSize="10" 
                           VerticalAlignment="Center"
                           Margin="0,0,5,0"
                           ToolTip="Transparency"/>
                
                <Slider Grid.Column="1" 
                        x:Name="OpacitySlider"
                        Minimum="0.3" 
                        Maximum="1.0" 
                        Value="{Binding ElementName=MainBorder, Path=Opacity, Mode=TwoWay}"
                        VerticalAlignment="Center"
                        Height="15"
                        ToolTip="Adjust window transparency"/>
                
                <TextBlock Grid.Column="2" 
                           Text="{Binding ElementName=OpacitySlider, Path=Value, StringFormat='{}{0:P0}'}"
                           FontSize="9" 
                           Width="30"
                           TextAlignment="Right"
                           VerticalAlignment="Center"
                           Foreground="{DynamicResource SecondaryTextBrush}"/>
            </Grid>
        </Border>
        </Grid>
    </Border>
</Window>
