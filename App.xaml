<Application x:Class="FFXIManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:FFXIManager"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- Global Tooltip Timing Configuration for Snappy Responsiveness -->
        <Style TargetType="{x:Type FrameworkElement}">
            <Setter Property="ToolTipService.InitialShowDelay" Value="150"/>
            <Setter Property="ToolTipService.ShowDuration" Value="15000"/>
            <Setter Property="ToolTipService.BetweenShowDelay" Value="50"/>
        </Style>

        <!-- Modern Color Palette -->
        <SolidColorBrush x:Key="PrimaryBrush" Color="#2563EB"/>
        <SolidColorBrush x:Key="PrimaryHoverBrush" Color="#1D4ED8"/>
        <SolidColorBrush x:Key="PrimaryPressedBrush" Color="#1E40AF"/>
        
        <SolidColorBrush x:Key="SuccessBrush" Color="#10B981"/>
        <SolidColorBrush x:Key="SuccessHoverBrush" Color="#059669"/>
        <SolidColorBrush x:Key="SuccessPressedBrush" Color="#047857"/>
        
        <SolidColorBrush x:Key="WarningBrush" Color="#F59E0B"/>
        <SolidColorBrush x:Key="WarningHoverBrush" Color="#D97706"/>
        <SolidColorBrush x:Key="WarningPressedBrush" Color="#B45309"/>
        
        <SolidColorBrush x:Key="DangerBrush" Color="#EF4444"/>
        <SolidColorBrush x:Key="DangerHoverBrush" Color="#DC2626"/>
        <SolidColorBrush x:Key="DangerPressedBrush" Color="#B91C1C"/>
        
        <SolidColorBrush x:Key="SecondaryBrush" Color="#6B7280"/>
        <SolidColorBrush x:Key="SecondaryHoverBrush" Color="#4B5563"/>
        <SolidColorBrush x:Key="SecondaryPressedBrush" Color="#374151"/>
        
        <SolidColorBrush x:Key="InfoBrush" Color="#8B5CF6"/>
        <SolidColorBrush x:Key="InfoHoverBrush" Color="#7C3AED"/>
        <SolidColorBrush x:Key="InfoPressedBrush" Color="#6D28D9"/>

        <!-- Base Modern Button Style -->
        <Style x:Key="ModernButtonBase" TargetType="ButtonBase">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="2" BlurRadius="8" Opacity="0.2"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#D1D5DB"/>
                                <Setter Property="Foreground" Value="#9CA3AF"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Primary Button Style -->
        <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource ModernButtonBase}">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Success Button Style -->
        <Style x:Key="SuccessButton" TargetType="Button" BasedOn="{StaticResource ModernButtonBase}">
            <Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SuccessHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource SuccessPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Warning Button Style -->
        <Style x:Key="WarningButton" TargetType="Button" BasedOn="{StaticResource ModernButtonBase}">
            <Setter Property="Background" Value="{StaticResource WarningBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource WarningHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource WarningPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Danger Button Style -->
        <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource ModernButtonBase}">
            <Setter Property="Background" Value="{StaticResource DangerBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource DangerHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource DangerPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Secondary Button Style -->
        <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource ModernButtonBase}">
            <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SecondaryHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource SecondaryPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Info Button Style -->
        <Style x:Key="InfoButton" TargetType="Button" BasedOn="{StaticResource ModernButtonBase}">
            <Setter Property="Background" Value="{StaticResource InfoBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource InfoHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource InfoPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Icon Button Style (smaller, for emoji icons) -->
        <Style x:Key="IconButton" TargetType="Button" BasedOn="{StaticResource ModernButtonBase}">
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="MinHeight" Value="36"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="2"/>
        </Style>

        <!-- Primary Icon Button -->
        <Style x:Key="PrimaryIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Success Icon Button -->
        <Style x:Key="SuccessIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
            <Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SuccessHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource SuccessPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Warning Icon Button -->
        <Style x:Key="WarningIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
            <Setter Property="Background" Value="{StaticResource WarningBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource WarningHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource WarningPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Danger Icon Button -->
        <Style x:Key="DangerIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
            <Setter Property="Background" Value="{StaticResource DangerBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource DangerHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource DangerPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Secondary Icon Button -->
        <Style x:Key="SecondaryIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
            <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SecondaryHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource SecondaryPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Info Icon Button -->
        <Style x:Key="InfoIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
            <Setter Property="Background" Value="{StaticResource InfoBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource InfoHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource InfoPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Toggle Button Style -->
        <Style x:Key="ModernToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource ModernButtonBase}">
            <Setter Property="Background" Value="{StaticResource DangerBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource DangerHoverBrush}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsChecked" Value="True"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource SuccessHoverBrush}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <!-- Icon Toggle Button -->
        <Style x:Key="IconToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource ModernToggleButton}">
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="MinHeight" Value="36"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="2"/>
        </Style>
    </Application.Resources>
</Application>
